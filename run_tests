#!/bin/bash
#
# Copyright (c) 2016 Western Digital Corporation or its affiliates
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc.

scriptdir=$(dirname "$0")

# shellcheck source=lib/functions
. "$scriptdir/lib/functions"

initialize_tracing() {
    if [ -n "$trace" ]; then
	rm -f "$(basename "$0").log"
	exec 1> >(while read -r line; do
		      [ "${line#+}" = "${line}" ] && echo "${line}"
                      echo "${line}" >> "$(basename "$0").log"
		  done)
	exec 2>&1
	echo "$*"
	set -x
    fi
}

# Verify whether all required software has been installed
pre_check() {
    for e in fio mkfs.ext4 mkfs.xfs multipathd pidof sg_reset; do
	if ! type -P "$e" >/dev/null 2>&1; then
	    echo "Error: could not find $e"
	    return 1
	fi
    done

    if ! pidof multipathd >/dev/null; then
	echo "Error: multipathd is not running"
	return 1
    fi
}

# Set up test configuration
setup() {
    /etc/init.d/srpd stop >/dev/null 2>&1
    if pidof srp_daemon >/dev/null; then
	echo "Error: failed to stop srp_daemon"
	return 1
    fi

    teardown || return $?

    if [ -d /sys/kernel/debug/dynamic_debug ]; then
	for m in ; do
            echo module $m +pmf >/sys/kernel/debug/dynamic_debug/control
	done
    fi

    start_target
}

# Undo setup()
teardown() {
    stop_target
}

shutdown_client() {
    remove_mpath_devs &&
    log_out &&
    stop_client
}

# Run the actual SRP tests
run_tests() {
    local success=0 failure=0 i t

    if [ ${#tests[@]} = 0 ]; then
	for t in "$scriptdir/tests"/*; do
	    tests+=("$t")
	done
    else
	for ((i=0;i<${#tests[@]};i++)); do
	    tests[i]="$scriptdir/tests/${tests[i]}"
	done
    fi
    for t in "${tests[@]}"; do
	[ "${t%\~}" != "$t" ] && continue
	echo "Running test $t ..."
	if start_client "" && "$t" "${options[@]}" && shutdown_client; then
	    echo "Test $t succeeded"
	    ((success++))
	else
	    echo "Test $t failed"
	    ((failure++))
	    if [ -n "$debug" ]; then
		return 1
	    fi
	fi
    done
    echo "$success tests succeeded and $failure tests failed"
}

parse_cmdline "$@" &&
    pre_check &&
    initialize_tracing "$@" &&
    setup &&
    {
	run_tests &&
	teardown
    }
